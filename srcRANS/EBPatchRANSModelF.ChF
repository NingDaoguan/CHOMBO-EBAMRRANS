C      _____                __
C     / ___/ /  ___  __ _  / /  ___
C    / /__/ _ \/ _ \/  V \/ _ \/ _ \
C    \___/_//_/\___/_/_/_/_.__/\___/
C    Please refer to Copyright.txt, in Chombo''s root directory.

cccccccccccccccc
      subroutine predadvectrans(
     &     chf_box[dcalc],
     &     chf_const_fra[q],
     &     chf_const_fra[dq],
     &     chf_const_fra[velcc],
     &     chf_fra[qlo],
     &     chf_fra[qhi],
     &     chf_const_int[normdir],
     &     chf_const_real[dtbydx],
     &     chf_const_int[nEqn])

      integer chf_ddecl[i;j;k], ivar     

      chf_multido[dcalc;i;j;k]
     
      do ivar = 0, nEqn-1
        qhi(chf_ix[i;j;k], ivar) = q(chf_ix[i;j;k], ivar) + half*min((one-velcc(chf_ix[i;j;k], normdir)*dtbydx),one)*dq(chf_ix[i;j;k], ivar)
        qlo(chf_ix[i;j;k], ivar) = q(chf_ix[i;j;k], ivar) - half*min((one+velcc(chf_ix[i;j;k], normdir)*dtbydx),one)*dq(chf_ix[i;j;k], ivar)
      enddo

      chf_enddo
 
      return
      end
ccccccccccccccc
      subroutine pointpredadvectrans(
     &     chf_vr[primit],
     &     chf_vr[primlo],
     &     chf_vr[primhi],
     &     chf_vr[pslope],
     &     chf_realvect[velcc],
     &     chf_const_int[normdir],
     &     chf_const_real[dtbydx],
     &     chf_const_int[nEqn])

      integer ivar
      do ivar = 0, nEqn-1
        primhi(ivar) = primit(ivar) + half*min((one-velcc(normdir)*dtbydx),one)*pslope(ivar)
        primlo(ivar) = primit(ivar) - half*min((one+velcc(normdir)*dtbydx),one)*pslope(ivar)
      enddo
 
      return 
      end     
